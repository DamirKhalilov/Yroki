


#Дан диапазон числен от 1 до 1000.Вывести все числа которые делятся на 7 без остатка.

#for d in range(1,1000):
 #   if d %2 ==0:
  #      if d % 7 == 0:
   #         print(d)

#2 Дана строка 'abcdefghijklmnopqrstuvwxyz'. Вывести порядковый номер, главную и заглавную букву алфавита.
#bykva = 'abcdefghijklmnopqrstuvwxyz'
#for y in range(+len(bykva)):

 #   print("индекс"[y])

#3. У вашего игрового персонажа есть шкала энергии, которая равна 1000 единиц. И у вас есть
# определенные активности, которые забирают у вас энергию. 1 - спорт (100 единиц), 2 -
#домашняя активность (60 единиц), 3 - уроки (180 единиц), 4 - слушать нытье(200 единиц).
#Так же есть активности, которые дают вам энергию: 1 - прослушивание музыки (60 единиц),
#2 - прием пищи (150 единиц), 3 - сон (500 единиц).

#health = 1000
#ream = 500
#lessons = 580
#while health > 0 :
  #  action = input('выбрать действия')
 #   if action ='lessons':
  #       health -= lessons
#        print(f"Heals":{health})


#Задача: пользователь должен сам выбирать активности до тех пор, пока не закончится
#энергия. Вывести на сколько в общем было потрачено энергии и сколько восполнено.



#4. Напишите скрипт для валидации паролей. Пользователь должен вводить два пароля и в
#случае, если они одинаковы вывести "Успех", иначе "Повторите попытку". Пароль должен:

 # 1) Быть больше или равному 8 символам или меньше или равным 16 символам.

  #2) Содержать заглавные буквы.

 # 3) числа.

 # 4) не содержать в себе символы "*-№#?!@$%^()="

#В случае если пароль не соответствует хотя бы одному условию, вывести соответствующую надпись.

'''1. В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
 В случае с английским алфавитом очки распределяются так:
    A, E, I, O, U, L, N, S, T, R – 1 очко;
    D, G – 2 очка;
    B, C, M, P – 3 очка;
    F, H, V, W, Y – 4 очка;
    K – 5 очков;
    J, X – 8 очков;
    Q, Z – 10 очков.
Напишите программу, которая вычисляет стоимость введенного пользователем слова.
Будем считать, что на вход подается только одно слово, которое содержит либо только английские буквы.
'''
bykva = {
    1 :['A', 'E', 'I', 'O',' 'U', 'L', 'N', 'S', 'T', 'R' ]
    2 : {'D, G ':2}
    3 = {'B, C, M, P ': 3}
    4 = {'F, H, V, W, Y ': 4}
    5 = {'K ':5}
    8 = {'J, X ' :8}
    10 = {'Q, Z  ':10
          }
word = input(). upper()
result = 0
for letter 
    if word in d [1]
    elif word in d [2]
    elif word in d [3]
    elif word in d [4]
    elif word in d [5]
    elif word in d [8]
    elif word in d [10]
















